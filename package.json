{
  "name": "jrx",
  "displayName": "JRX",
  "description": "Optimise VS Code to run on low RAM and Storage",
  "version": "0.12.3",
  "featureFlags": {
    "usingNewPythonInterpreterPathApi": true,
    "usingNewPythonInterpreterPathApiV2": true
  },
  "publisher": "HaloVoid",
  "icon": "images/logo.png",
  "engines": {
    "vscode": "^1.56.0"
  },
  "categories": [
    "Programming Languages",
    "Other"
  ],
  "keywords": [
    "javascript",
    "php",
    "python",
    "perl",
    "ruby",
    "multi-root ready"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/Binit06/JRX.git"
  },
  "activationEvents": [
    "onCommand:jrx.run",
    "onCommand:jrx.runCustomCommand",
    "onCommand:jrx.runByLanguage",
    "onStartupFinished"
  ],
  "main": "./out/src/extension",
  "contributes": {
    "commands": [
      {
        "command": "jrx.run",
        "title": "Run Code",
        "icon": "$(play)"
      },
      {
        "command": "jrx.runCustomCommand",
        "title": "Run Custom Command"
      },
      {
        "command": "jrx.runByLanguage",
        "title": "Run By Language"
      },
      {
        "command": "jrx.stop",
        "title": "Stop Code Run",
        "icon": "$(debug-stop)"
      }
    ],
    "keybindings": [
      {
        "command": "jrx.run",
        "key": "ctrl+alt+n"
      },
      {
        "command": "jrx.runCustomCommand",
        "key": "ctrl+alt+k"
      },
      {
        "command": "jrx.runByLanguage",
        "key": "ctrl+alt+j"
      },
      {
        "command": "jrx.stop",
        "key": "ctrl+alt+m"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "when": "!inOutput && config.jrx.showRunCommandInEditorContextMenu",
          "command": "jrx.run",
          "group": "navigation"
        },
        {
          "when": "inOutput && !config.jrx.runInTerminal",
          "command": "jrx.stop",
          "group": "stop-code-run"
        }
      ],
      "editor/title/run": [
        {
          "when": "config.jrx.showRunIconInEditorTitleMenu",
          "command": "jrx.run",
          "group": "navigation"
        }
      ],
      "editor/title": [
        {
          "when": "config.jrx.showStopIconInEditorTitleMenu && jrx.codeRunning",
          "command": "jrx.stop",
          "group": "navigation"
        }
      ],
      "explorer/context": [
        {
          "when": "!explorerResourceIsFolder && config.jrx.showRunCommandInExplorerContextMenu",
          "command": "jrx.run",
          "group": "navigation"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "Run Code configuration",
      "properties": {
        "jrx.executorMapByGlob": {
          "type": "object",
          "default": {
            "pom.xml": "cd $dir && mvn clean package"
          },
          "description": "Set the executor by glob.",
          "scope": "resource"
        },
        "jrx.executorMap": {
          "type": "object",
          "default": {
            "javascript": "node",
            "java": "cd $dir && javac $fileName && java $fileNameWithoutExt",
            "c": "cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
            "zig": "zig run",
            "cpp": "cd $dir && g++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
            "objective-c": "cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
            "php": "php",
            "python": "python -u",
            "perl": "perl",
            "perl6": "perl6",
            "ruby": "ruby",
            "go": "go run",
            "lua": "lua",
            "groovy": "groovy",
            "powershell": "powershell -ExecutionPolicy ByPass -File",
            "bat": "cmd /c",
            "shellscript": "bash",
            "fsharp": "fsi",
            "csharp": "scriptcs",
            "vbscript": "cscript //Nologo",
            "typescript": "ts-node",
            "coffeescript": "coffee",
            "scala": "scala",
            "swift": "swift",
            "julia": "julia",
            "crystal": "crystal",
            "ocaml": "ocaml",
            "r": "Rscript",
            "applescript": "osascript",
            "clojure": "lein exec",
            "haxe": "haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",
            "rust": "cd $dir && rustc $fileName && $dir$fileNameWithoutExt",
            "racket": "racket",
            "scheme": "csi -script",
            "ahk": "autohotkey",
            "autoit": "autoit3",
            "dart": "dart",
            "pascal": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
            "d": "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",
            "haskell": "runghc",
            "nim": "nim compile --verbosity:0 --hints:off --run",
            "lisp": "sbcl --script",
            "kit": "kitc --run",
            "v": "v run",
            "sass": "sass --style expanded",
            "scss": "scss --style expanded",
            "less": "cd $dir && lessc $fileName $fileNameWithoutExt.css",
            "FortranFreeForm": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
            "fortran-modern": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
            "fortran_fixed-form": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
            "fortran": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
            "sml": "cd $dir && sml $fileName",
            "mojo": "mojo run",
            "erlang": "escript",
            "spwn": "spwn build",
            "pkl": "cd $dir && pkl eval -f yaml $fileName -o $fileNameWithoutExt.yaml",
            "gleam": "gleam run -m $fileNameWithoutExt"
          },
          "description": "Set the executor of each language.",
          "scope": "resource"
        },
        "jrx.executorMapByFileExtension": {
          "type": "object",
          "default": {
            ".vb": "cd $dir && vbc /nologo $fileName && $dir$fileNameWithoutExt",
            ".vbs": "cscript //Nologo",
            ".scala": "scala",
            ".jl": "julia",
            ".cr": "crystal",
            ".ml": "ocaml",
            ".zig": "zig run",
            ".exs": "elixir",
            ".hx": "haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",
            ".rkt": "racket",
            ".scm": "csi -script",
            ".ahk": "autohotkey",
            ".au3": "autoit3",
            ".kt": "cd $dir && kotlinc $fileName -include-runtime -d $fileNameWithoutExt.jar && java -jar $fileNameWithoutExt.jar",
            ".kts": "kotlinc -script",
            ".dart": "dart",
            ".pas": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
            ".pp": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
            ".d": "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",
            ".hs": "runhaskell",
            ".nim": "nim compile --verbosity:0 --hints:off --run",
            ".csproj": "dotnet run --project",
            ".fsproj": "dotnet run --project",
            ".lisp": "sbcl --script",
            ".kit": "kitc --run",
            ".v": "v run",
            ".vsh": "v run",
            ".sass": "sass --style expanded",
            ".cu": "cd $dir && nvcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
            ".ring": "ring",
            ".sml": "cd $dir && sml $fileName",
            ".mojo": "mojo run",
            ".erl": "escript",
            ".spwn": "spwn build",
            ".pkl": "cd $dir && pkl eval -f yaml $fileName -o $fileNameWithoutExt.yaml",
            ".gleam": "gleam run -m $fileNameWithoutExt"
          },
          "description": "Set the executor of each file extension.",
          "scope": "resource"
        },
        "jrx.customCommand": {
          "type": "string",
          "default": "echo Hello",
          "description": "Set the custom command to run.",
          "scope": "resource"
        },
        "jrx.languageIdToFileExtensionMap": {
          "type": "object",
          "default": {
            "bat": ".bat",
            "powershell": ".ps1",
            "typescript": ".ts"
          },
          "description": "Set the mapping of languageId to file extension.",
          "scope": "resource"
        },
        "jrx.defaultLanguage": {
          "type": "string",
          "default": "",
          "description": "Set the default language to run.",
          "scope": "resource"
        },
        "jrx.cwd": {
          "type": "string",
          "default": "",
          "description": "Set the working directory.",
          "scope": "resource"
        },
        "jrx.fileDirectoryAsCwd": {
          "type": "boolean",
          "default": false,
          "description": "Whether to use the directory of the file to be executed as the working directory.",
          "scope": "resource"
        },
        "jrx.clearPreviousOutput": {
          "type": "boolean",
          "default": false,
          "description": "Whether to clear previous output before each run.",
          "scope": "resource"
        },
        "jrx.saveAllFilesBeforeRun": {
          "type": "boolean",
          "default": false,
          "description": "Whether to save all files before running.",
          "scope": "resource"
        },
        "jrx.saveFileBeforeRun": {
          "type": "boolean",
          "default": false,
          "description": "Whether to save the current file before running.",
          "scope": "resource"
        },
        "jrx.enableAppInsights": {
          "type": "boolean",
          "default": true,
          "description": "Whether to enable AppInsights to track user telemetry data.",
          "scope": "resource"
        },
        "jrx.showExecutionMessage": {
          "type": "boolean",
          "default": true,
          "description": "Whether to show extra execution message like [Running] ... and [Done] ...",
          "scope": "resource"
        },
        "jrx.runInTerminal": {
          "type": "boolean",
          "default": false,
          "description": "Whether to run code in Integrated Terminal.",
          "scope": "resource"
        },
        "jrx.terminalRoot": {
          "type": "string",
          "default": "",
          "description": "For Windows system, replaces the Windows style drive letter in the command with a Unix style root when using a custom shell as the terminal, like Bash or Cgywin. Example: Setting this to '/mnt/' will replace 'C:\\path' with '/mnt/c/path'",
          "scope": "resource"
        },
        "jrx.preserveFocus": {
          "type": "boolean",
          "default": true,
          "description": "Whether to preserve focus on code editor after code run is triggered.",
          "scope": "resource"
        },
        "jrx.ignoreSelection": {
          "type": "boolean",
          "default": false,
          "description": "Whether to ignore selection to always run entire file.",
          "scope": "resource"
        },
        "jrx.showRunIconInEditorTitleMenu": {
          "type": "boolean",
          "default": true,
          "description": "Whether to show 'Run Code' icon in editor title menu.",
          "scope": "resource"
        },
        "jrx.showStopIconInEditorTitleMenu": {
          "type": "boolean",
          "default": true,
          "description": "Whether to show 'Stop code run' icon in the editor title menu when code is running.",
          "scope": "resource"
        },
        "jrx.showRunCommandInEditorContextMenu": {
          "type": "boolean",
          "default": true,
          "description": "Whether to show 'Run Code' command in editor context menu.",
          "scope": "resource"
        },
        "jrx.showRunCommandInExplorerContextMenu": {
          "type": "boolean",
          "default": true,
          "description": "Whether to show 'Run Code' command in explorer context menu.",
          "scope": "resource"
        },
        "jrx.temporaryFileName": {
          "type": "string",
          "default": "tempCodeRunnerFile",
          "description": "Temporary file name used in running selected code snippet. When it is set as empty, the file name will be random.",
          "scope": "resource"
        },
        "jrx.respectShebang": {
          "type": "boolean",
          "default": true,
          "description": "Whether to respect Shebang to run code.",
          "scope": "resource"
        }
      }
    },
    "languages": [
      {
        "id": "jrx-output",
        "mimetypes": [
          "text/x-code-output"
        ]
      }
    ],
    "grammars": [
      {
        "language": "jrx-output",
        "scopeName": "jrx.output",
        "path": "./syntaxes/jrx-output.tmLanguage"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "tsc -p ./",
    "compile": "tsc -watch -p ./",
    "tslint": "tslint -t verbose src/**/*.ts"
  },
  "dependencies": {
    "applicationinsights": "^0.19.0",
    "micromatch": "^4.0.2",
    "tree-kill": "^1.2.2"
  },
  "devDependencies": {
    "@types/micromatch": "^3.1.0",
    "@types/mocha": "^2.2.32",
    "@types/node": "^6.0.40",
    "@types/vscode": "^1.56.0",
    "mocha": "^6.1.4",
    "tslint": "^5.5.0",
    "typescript": "^3.8.3"
  }
}
